{"version":3,"sources":["components/square/square.module.scss","components/board/board.module.scss","components/modal/modal.module.scss","components/gameField/gameField.module.scss","components/app/app.module.scss","utils/constants.ts","components/modal/index.tsx","components/square/index.tsx","components/board/index.tsx","functions/calculateWinner.ts","components/gameField/index.tsx","components/app/index.tsx","index.tsx"],"names":["module","exports","GAME_CELL_STATE","Modal","memo","props","active","children","className","classNames","styles","modal","modal__content","Square","value","onSelect","onClick","square","state","X","O","initValue","Array","fill","EMPTY","Board","setScore","playerX","playerO","score","useState","cells","setCells","isNext","setIsNext","modalActive","setModalActive","modalContent","setModalContent","counterTurns","setCounterTurns","showModalWithContent","content","useCallback","index","prev","turn","copy","useEffect","squares","lines","i","length","a","b","c","calculateWinner","renderSquare","board","row","type","style","width","GameField","firstPalayerName","secondPlayerName","initScore","gameField","boardContainer","scoreContainer","App","setFirstPlayerName","setSecondPlayerName","wrapper","main","squareContainer","onSubmit","e","preventDefault","display","flexDirection","gap","marginRight","onChange","target","required","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca9eca85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"square_square__3Tgoo\",\"state\":\"square_state__2AJN0\",\"state--cross\":\"square_state--cross__2QHPE\",\"state--circle\":\"square_state--circle__1Cmdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__23hFT\",\"row\":\"board_row__1kUJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__aJ3u5\",\"modal--active\":\"modal_modal--active__eiMBl\",\"modal__content\":\"modal_modal__content__2K6Pj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameField\":\"gameField_gameField__j661t\",\"boardContainer\":\"gameField_boardContainer__ucpyc\",\"scoreContainer\":\"gameField_scoreContainer__1GLcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__2hz6n\",\"header\":\"app_header__XhXsP\",\"main\":\"app_main__WRLzg\",\"squareContainer\":\"app_squareContainer__2ff9o\",\"footer\":\"app_footer__3VXPP\"};","// eslint-disable-next-line no-shadow\nexport enum GAME_CELL_STATE {\n  X = 'X',\n  O = 'O',\n  EMPTY = '',\n}\n","import classNames from 'classnames';\nimport React, { FC, memo } from 'react';\n\nimport styles from './modal.module.scss';\n\ninterface Props {\n  active: boolean\n}\n\nexport const Modal: FC<Props> = memo((props) => {\n  const { active, children } = props;\n\n  return (\n    <div className={classNames(\n      styles.modal,\n      {\n        [styles['modal--active']]: active,\n      },\n    )}\n    >\n      <div className={styles.modal__content}>\n        {children}\n      </div>\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, { FC, memo } from 'react';\nimport { GAME_CELL_STATE } from '../../utils/constants';\n\nimport styles from './square.module.scss';\n\ninterface Props {\n  value: GAME_CELL_STATE,\n  onSelect: () => void,\n}\n\nexport const Square: FC<Props> = memo((props) => {\n  const {\n    value,\n    onSelect,\n  } = props;\n\n  const onClick = () => {\n    onSelect();\n  };\n\n  return (\n    <div\n      onClick={onClick}\n      className={classNames(\n        styles.square,\n        styles.state,\n        {\n          [styles['state--cross']]: value === GAME_CELL_STATE.X,\n        },\n        {\n          [styles['state--circle']]: value === GAME_CELL_STATE.O,\n        },\n      )}\n    >\n    </div>\n  );\n});\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { calculateWinner } from '../../functions/calculateWinner';\nimport { GAME_CELL_STATE } from '../../utils/constants';\nimport { Modal } from '../modal';\nimport { Square } from '../square';\n\nimport styles from './board.module.scss';\n\ninterface Props {\n  score: {\n    [x: string]: number,\n  },\n  playerX: string,\n  playerO: string,\n  setScore: React.Dispatch<React.SetStateAction<{[x: string]: number;}>>;\n}\n\nconst initValue: Array<GAME_CELL_STATE> = Array(9).fill(GAME_CELL_STATE.EMPTY);\n\nexport const Board: FC<Props> = memo((props) => {\n  const {\n    setScore,\n    playerX,\n    playerO,\n    score,\n  } = props;\n\n  const [cells, setCells] = useState(initValue);\n  const [isNext, setIsNext] = useState(true);\n  const [modalActive, setModalActive] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const [counterTurns, setCounterTurns] = useState(0);\n\n  const showModalWithContent = (content: string) => {\n    setModalContent(content);\n    setModalActive(true);\n  };\n\n  const onSelect = useCallback((index: number) => {\n    setCounterTurns(prev => prev + 1);\n\n    const turn = isNext ? GAME_CELL_STATE.X : GAME_CELL_STATE.O;\n\n    setCells((prev) => {\n      const copy = [...prev];\n\n      copy[index] = turn;\n\n      return copy;\n    });\n\n    setIsNext(prev => !prev);\n  }, [isNext]);\n\n  useEffect(() => {\n    const winner = calculateWinner(cells);\n\n    switch (winner) {\n      case GAME_CELL_STATE.X:\n        setScore((prev) => (\n          {\n            ...prev, [playerX]: prev[playerX] + 1,\n          }));\n        setCounterTurns(0);\n        showModalWithContent(`${playerX} is winner!🏆🏆🏆`);\n        break;\n\n      case GAME_CELL_STATE.O:\n        setScore((prev) => (\n          {\n            ...prev, [playerO]: prev[playerO] + 1,\n          }));\n        setCounterTurns(0);\n        showModalWithContent(`${playerO} is winner!🏆🏆🏆`);\n        break;\n\n      default:\n        if (counterTurns === 9) {\n          setCounterTurns(0);\n          showModalWithContent('friendship won!👬');\n          setScore((prev) => ({ ...prev }));\n        }\n\n        break;\n    }\n  }, [cells]);\n\n  useEffect(() => {\n    setCells(initValue);\n  }, [score]);\n\n  const renderSquare = (index: number) => (\n    <Square\n      value={cells[index]}\n      onSelect={() => {\n        if (!cells[index]) {\n          onSelect(index);\n        }\n      }}\n    />\n  );\n\n  return (\n    <>\n      <div className={styles.board}>\n        <div className={styles.row}>\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className={styles.row}>\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className={styles.row}>\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n      <Modal active={modalActive}>\n        <h1>{modalContent}</h1>\n        <button\n          type=\"button\"\n          style={{\n            width: '100%',\n          }}\n          onClick={() => setModalActive(false)}\n        >\n          Ok\n        </button>\n      </Modal>\n    </>\n  );\n});\n","import { GAME_CELL_STATE } from '../utils/constants';\n\nexport const calculateWinner = (squares: Array<GAME_CELL_STATE>) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, memo, useState } from 'react';\nimport { Board } from '../board';\n\nimport styles from './gameField.module.scss';\n\ninterface Props {\n  firstPalayerName: string;\n  secondPlayerName: string;\n}\n\nexport const GameField: FC<Props> = memo((props) => {\n  const {\n    firstPalayerName,\n    secondPlayerName,\n  } = props;\n\n  const initScore = {\n    [firstPalayerName]: 0,\n    [secondPlayerName]: 0,\n  };\n\n  const [score, setScore] = useState(initScore);\n\n  return (\n    <div className={styles.gameField}>\n      <div className={styles.boardContainer}>\n        <Board\n          score={score}\n          setScore={setScore}\n          playerX={firstPalayerName}\n          playerO={secondPlayerName}\n        />\n      </div>\n\n      <div className={styles.scoreContainer}>\n        <h2>Score</h2>\n\n        <p>\n          {`${firstPalayerName} (X) : ${score[firstPalayerName]}`}\n        </p>\n\n        <p>\n          {`${secondPlayerName} (O) : ${score[secondPlayerName]}`}\n        </p>\n      </div>\n    </div>\n  );\n});\n","// i wraped inputs in lable so i don't need htmlFor props\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { useState, memo, SyntheticEvent } from 'react';\nimport { GameField } from '../gameField';\nimport { Modal } from '../modal';\n\nimport styles from './app.module.scss';\n\nexport const App: React.FC = memo(() => {\n  const [modalActive, setModalActive] = useState(true);\n  const [firstPalayerName, setFirstPlayerName] = useState('');\n  const [secondPlayerName, setSecondPlayerName] = useState('');\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    setModalActive(false);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.main}>\n        { !modalActive\n        && (\n          <div className={styles.squareContainer}>\n            <GameField firstPalayerName={firstPalayerName} secondPlayerName={secondPlayerName} />\n          </div>\n        )}\n      </div>\n\n      <Modal active={modalActive}>\n        <form\n          onSubmit={handleSubmit}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n          }}\n        >\n          <label>\n            <p\n              style={{\n                marginRight: '5px',\n                display: 'inline',\n              }}\n            >\n              X player -\n            </p>\n            <input\n              type=\"text\"\n              value={firstPalayerName}\n              onChange={({ target }) => setFirstPlayerName(target.value)}\n              required\n            />\n          </label>\n\n          <label>\n            <p\n              style={{\n                marginRight: '5px',\n                display: 'inline',\n              }}\n            >\n              O player -\n            </p>\n            <input\n              type=\"text\"\n              value={secondPlayerName}\n              onChange={({ target }) => setSecondPlayerName(target.value)}\n              required\n            />\n          </label>\n\n          <button type=\"submit\">\n            Create game\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}